/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/user/": {
    /** @description This method retrieves the account profile information for an authenticated user, which requires a <a href="/api-docs/static/oauth-authorization-code-grant.html">User access token</a>. What is returned is controlled by the <a href="#scopes">scopes</a>. <p>For a business account you use the default scope <code>commerce.identity.readonly</code>, which returns all the fields in the <a href="/api-docs/commerce/identity/resources/user/methods/getUser#response.businessAccount">businessAccount</a> container. These are returned  because this is all public information.</p>  <p> For an individual account, the fields returned in the <a href="/api-docs/commerce/identity/resources/user/methods/getUser#response.individualAccount">individualAccount</a> container are based on the scope you use. Using the default scope, only public information, such as eBay user ID, are returned. For details about what each scope returns, see the <a href="/api-docs/commerce/identity/overview.html">Identity API Overview</a>.</p> <p>In the Sandbox, this API returns mock data. <b>Note: </b> You must use the correct scope or scopes for the data you want returned.</p> */
    get: operations["getUser"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description The type that defines the fields for an address. */
    Address: {
      /** @description The first line of the street address. */
      addressLine1?: string;
      /** @description The second line of the street address. This field is not always used, but can be used for 'Suite Number' or 'Apt Number'. */
      addressLine2?: string;
      /** @description The city of the address. */
      city?: string;
      /** @description The two-letter <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:CountryCodeEnum'>eBay API documentation</a> */
      country?: string;
      /** @description The county of the address. */
      county?: string;
      /** @description The postal code of the address. */
      postalCode?: string;
      /** @description The state or province of the address. */
      stateOrProvince?: string;
    };
    /** @description The type that defines the fields for the business account information. */
    BusinessAccount: {
      /** @description The container that returns the address of the business account. */
      address?: components["schemas"]["Address"];
      /** @description An additional name that is used for their business on eBay. The business name is returned in the <b> name</b> field. */
      doingBusinessAs?: string;
      /** @description The email address of the business account. */
      email?: string;
      /** @description The business name associated with the user's eBay account. */
      name?: string;
      /** @description The container that returns the contact details of the person who is the primary contact for this account. */
      primaryContact?: components["schemas"]["Contact"];
      /** @description The container that returns the primary phone number for the business account. */
      primaryPhone?: components["schemas"]["Phone"];
      /** @description The container that returns the secondary phone number for the business account. */
      secondaryPhone?: components["schemas"]["Phone"];
      /** @description The business website address associated with the eBay account. */
      website?: string;
    };
    /** @description The type that defines the fields for the information of the contact person for the account. */
    Contact: {
      /** @description The first name of the contact person. */
      firstName?: string;
      /** @description The last name of the contact person. */
      lastName?: string;
    };
    /** @description This type defines the fields that can be returned in an error. */
    Error: {
      /** @description Identifies the type of erro. */
      category?: string;
      /** @description Name for the primary system where the error occurred. This is relevant for application errors. */
      domain?: string;
      /**
       * Format: int32 
       * @description A unique number to identify the error.
       */
      errorId?: number;
      /** @description An array of request elements most closely associated to the error. */
      inputRefIds?: (string)[];
      /** @description A more detailed explanation of the error. */
      longMessage?: string;
      /** @description Information on how to correct the problem, in the end user's terms and language where applicable. */
      message?: string;
      /** @description An array of request elements most closely associated to the error. */
      outputRefIds?: (string)[];
      /** @description An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned. */
      parameters?: (components["schemas"]["ErrorParameter"])[];
      /** @description Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc. */
      subdomain?: string;
    };
    ErrorParameter: {
      /** @description The object of the error. */
      name?: string;
      /** @description The value of the object. */
      value?: string;
    };
    /** @description The type that defines the fields for the information of an individual account. */
    IndividualAccount: {
      /** @description The eBay user's registration email address. */
      email?: string;
      /** @description The eBay user's first name. */
      firstName?: string;
      /** @description The eBay user's last name. */
      lastName?: string;
      /** @description The container that returns the eBay user's primary phone number information. */
      primaryPhone?: components["schemas"]["Phone"];
      /** @description The container that returns the eBay user's address information. */
      registrationAddress?: components["schemas"]["Address"];
      /** @description The container that returns the eBay user's secondary phone number information. */
      secondaryPhone?: components["schemas"]["Phone"];
    };
    /** @description The type that defines the fields for the details of a phone. */
    Phone: {
      /** @description The two-letter <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> standard of the country to which the phone number belongs. */
      countryCode?: string;
      /** @description The numeric string representing the phone number. */
      number?: string;
      /** @description The type of phone service. <br /><br /><b> Valid Values: </b> MOBILE or LAND_LINE  <br /><br />Code so that your app gracefully handles any future changes to this list. */
      phoneType?: string;
    };
    /** @description The type that defines the fields for the <b>getUser</b> method. */
    UserResponse: {
      /** @description Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries:   <br /><br />EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL <br /><br /><b> Valid Values:</b> BUSINESS or INDIVIDUAL <br /><br />Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a> */
      accountType?: string;
      /** @description The container that returns the business account information of the user. */
      businessAccount?: components["schemas"]["BusinessAccount"];
      /** @description The account information of the user. */
      individualAccount?: components["schemas"]["IndividualAccount"];
      /** @description The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a> */
      registrationMarketplaceId?: string;
      /** @description Indicates the user's account status. Possible values: <code>CONFIRMED</code>, <code>UNCONFIRMED</code>, <code>ACCOUNTONHOLD</code> and <code>UNDETERMINED</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a> */
      status?: string;
      /** @description The eBay immutable user ID of the user's account and can always be used to identify the user. */
      userId?: string;
      /** @description The user name, which was specific by the user when they created the account. <br /><br /><span class="tablenote"><b>Note: </b> This value can be changed by the user.</span> */
      username?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** @description This method retrieves the account profile information for an authenticated user, which requires a <a href="/api-docs/static/oauth-authorization-code-grant.html">User access token</a>. What is returned is controlled by the <a href="#scopes">scopes</a>. <p>For a business account you use the default scope <code>commerce.identity.readonly</code>, which returns all the fields in the <a href="/api-docs/commerce/identity/resources/user/methods/getUser#response.businessAccount">businessAccount</a> container. These are returned  because this is all public information.</p>  <p> For an individual account, the fields returned in the <a href="/api-docs/commerce/identity/resources/user/methods/getUser#response.individualAccount">individualAccount</a> container are based on the scope you use. Using the default scope, only public information, such as eBay user ID, are returned. For details about what each scope returns, see the <a href="/api-docs/commerce/identity/overview.html">Identity API Overview</a>.</p> <p>In the Sandbox, this API returns mock data. <b>Note: </b> You must use the correct scope or scopes for the data you want returned.</p> */
  getUser: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserResponse"];
        };
      };
      /** @description Not found */
      404: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
}
