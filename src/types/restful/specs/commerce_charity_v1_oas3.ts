/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/charity_org/{charity_org_id}": {
    /** @description This call is used to retrieve detailed information about supported charitable organizations. It allows users to retrieve the details for a specific charitable organization using its charity organization ID. */
    get: operations["getCharityOrg"];
  };
  "/charity_org": {
    /** @description This call is used to search for supported charitable organizations. It allows users to search for a specific charitable organization, or for multiple charitable organizations, from a particular charitable domain and/or geographical region, or by using search criteria.<br /><br />The call returns paginated search results containing the charitable organizations that match the specified criteria. */
    get: operations["getCharityOrgs"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description The physical location of the item. */
    Address: {
      /** @description The city of the charitable organization. */
      city?: string;
      /** @description The state or province of the charitable organization. */
      stateOrProvince?: string;
      /** @description The postal code of the charitable organization. */
      postalCode?: string;
      /** @description The two-letter <a href="https://www.iso.org/iso-3166-country-codes.html ">ISO 3166</a> standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/charity/types/bas:CountryCodeEnum'>eBay API documentation</a> */
      country?: string;
    };
    /** @description The full location, ID, logo and other details of the charity organization. */
    CharityOrg: {
      /** @description The ID of the charitable organization. */
      charityOrgId?: string;
      /** @description The description of the charitable organization. */
      description?: string;
      /** @description The location details of the charitable organization. */
      location?: components["schemas"]["Location"];
      /** @description The logo of the charitable organization. */
      logoImage?: components["schemas"]["Image"];
      /** @description The mission statement of the charitable organization. */
      missionStatement?: string;
      /** @description The name of the charitable organization. */
      name?: string;
      /** @description The registration ID for the charitable organization.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span> For the US marketplace, this is the EIN.</span> */
      registrationId?: string;
      /** @description The link to the website for the charitable organization. */
      website?: string;
    };
    /** @description A single set of search results, with information for accessing other sets. */
    CharitySearchResponse: {
      /** @description The list of charitable organizations that match the search criteria. */
      charityOrgs?: (components["schemas"]["CharityOrg"])[];
      /** @description The relative path to the current set of results. */
      href?: string;
      /**
       * Format: int32 
       * @description The number of items, from the result set, returned in a single page.<br /><br /><b>Valid Values:</b> <code>1-100</code><br /><br /><b>Default:</b> <code>20</code>
       */
      limit?: number;
      /** @description The relative path to the next set of results. */
      next?: string;
      /**
       * Format: int32 
       * @description The number of items that will be skipped in the result set. This is used with the <b>limit</b> field to control the pagination of the output.<br /><br />For example, if the <b>offset</b> is set to <code>0</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 1 through 10 from the list of items returned. If the <b>offset</b> is set to <code>10</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 11 through 20 from the list of items returned.<br /><br /><b>Valid Values:</b> <code>0-10,000</code><br /><br /><b>Default:</b> <code>0</code>
       */
      offset?: number;
      /** @description The relative path to the previous set of results. */
      prev?: string;
      /**
       * Format: int32 
       * @description The total number of matches for the search criteria.
       */
      total?: number;
    };
    /** @description This type defines the fields that can be returned in an error. */
    Error: {
      /** @description Identifies the type of erro. */
      category?: string;
      /** @description Name for the primary system where the error occurred. This is relevant for application errors. */
      domain?: string;
      /**
       * Format: int32 
       * @description A unique number to identify the error.
       */
      errorId?: number;
      /** @description An array of request elements most closely associated to the error. */
      inputRefIds?: (string)[];
      /** @description A more detailed explanation of the error. */
      longMessage?: string;
      /** @description Information on how to correct the problem, in the end user's terms and language where applicable. */
      message?: string;
      /** @description An array of request elements most closely associated to the error. */
      outputRefIds?: (string)[];
      /** @description An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned. */
      parameters?: (components["schemas"]["ErrorParameter"])[];
      /** @description Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc. */
      subdomain?: string;
    };
    ErrorParameter: {
      /** @description The object of the error. */
      name?: string;
      /** @description The value of the object. */
      value?: string;
    };
    /** @description Defines the format of a geographic coordinate. */
    GeoCoordinates: {
      /** @description The latitude component of the geographic coordinate. */
      latitude?: number;
      /** @description The longitude component of the geographic coordinate. */
      longitude?: number;
    };
    /** @description The logo of the charitable organization. */
    Image: {
      /** @description The height of the logo image. */
      height?: string;
      /** @description The URL to the logo image location. */
      imageUrl?: string;
      /** @description The width of the logo image. */
      width?: string;
    };
    Location: {
      /** @description The address of the charitable organization. */
      address?: components["schemas"]["Address"];
      /** @description The geo-coordinates of the charitable organization. */
      geoCoordinates?: components["schemas"]["GeoCoordinates"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** @description This call is used to retrieve detailed information about supported charitable organizations. It allows users to retrieve the details for a specific charitable organization using its charity organization ID. */
  getCharityOrg: {
    parameters: {
      header: {
        /** @description A header used to specify the eBay marketplace ID.<br /><br /><b>Valid Values:</b> <code>EBAY_GB</code> and <code>EBAY_US</code> */
        "X-EBAY-C-MARKETPLACE-ID": string;
      };
      path: {
        /** @description The unique ID of the charitable organization. */
        charity_org_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CharityOrg"];
        };
      };
      /** @description Bad Request */
      400: never;
      /** @description Not found */
      404: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
  /** @description This call is used to search for supported charitable organizations. It allows users to search for a specific charitable organization, or for multiple charitable organizations, from a particular charitable domain and/or geographical region, or by using search criteria.<br /><br />The call returns paginated search results containing the charitable organizations that match the specified criteria. */
  getCharityOrgs: {
    parameters: {
      query?: {
        /** @description The number of items, from the result set, returned in a single page.<br /><br /><b>Valid Values:</b> <code>1-100</code><br /><br /><b>Default:</b> <code>20</code> */
        limit?: string;
        /** @description The number of items that will be skipped in the result set. This is used with the <b>limit</b> field to control the pagination of the output.<br /><br />For example, if the <b>offset</b> is set to <code>0</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 1 through 10 from the list of items returned. If the <b>offset</b> is set to <code>10</code> and the <b>limit</b> is set to <code>10</code>, the method will retrieve items 11 through 20 from the list of items returned.<br /><br /><b>Valid Values:</b> <code>0-10,000</code><br /><br /><b>Default:</b> <code>0</code> */
        offset?: string;
        /** @description A query string that matches the keywords in name, mission statement, or description. */
        q?: string;
        /** @description A comma-separated list of charitable organization registration IDs.<br /><br /><span class="tablenote"><b>Note: </b>Do not specify this parameter for query-based searches. Specify either the <b>q</b> or <b>registration_ids</b> parameter, but not both.</span><br /><br /><b>Maximum Limit:</b> <code>20</code> */
        registration_ids?: string;
      };
      header: {
        /** @description A header used to specify the eBay marketplace ID.<br /><br /><b>Valid Values:</b> <code>EBAY_GB</code> and <code>EBAY_US</code> */
        "X-EBAY-C-MARKETPLACE-ID": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CharitySearchResponse"];
        };
      };
      /** @description Bad Request */
      400: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
}
