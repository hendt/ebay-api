/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/rate_table/{rate_table_id}": {
    /** @description This method retrieves an existing rate table identified by the <b>rate_table_id</b> path parameter.<br><br>Shipping rate tables are currently supported by the following marketplaces: United States, Canada, United Kingdom, Germany, Australia, France, Italy, and Spain. A successful call returns detailed information for the specified shipping rate table. */
    get: operations["getRateTable"];
  };
  "/rate_table/{rate_table_id}/update_shipping_cost": {
    /** @description This method allows sellers to update <b>shippingCost</b> and/or <b>additionalCost</b> information for an existing shipping rate table identified by the <b>rate_table_id</b> path parameter.<br><br>A successful call returns an HTTP status code of <b>204 No Content</b>. */
    post: operations["updateShippingCost"];
  };
  "/payout_settings": {
    /** @description <div class="msgbox_important"><p class="msgbox_importantInDiv" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #dd1e31;" class="mcFormatColor">Important!</span></b></span></span> Split-payout functionality is <b>only</b> available to mainland China sellers, who can split payouts between their Payoneer account and bank account. Card payouts are not currently available for sellers in mainland China.</p></div><br/>This method returns details on two payment instruments defined on a seller's account, including the ID, type, status, nickname, last four digits of the account number, and payout percentage for the instruments.<br/><br/>Using the <b>instrumentId</b> returned with this method, sellers can makes changes to the payout split of the instruments with the <b>updatePayoutPercentage</b> method. Note that the <b>instrumentStatus</b> of a payment instrument, also returned using this method, must be <code>ACTIVE</code> in order to do split payouts on that payment instrument. */
    get: operations["getPayoutSettings"];
  };
  "/payout_settings/update_percentage": {
    /** @description <div class="msgbox_important"><p class="msgbox_importantInDiv" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #dd1e31;" class="mcFormatColor">Important!</span></b></span></span>  Split-payout functionality is <b>only</b> available to mainland China sellers, who can split payouts between their Payoneer account and bank account. Card payouts are not currently available for sellers in mainland China.</p></div><br/>This method allows sellers in mainland China to configure the split-payout percentage for two payout instruments available for seller payouts. For example, a seller can split payouts to have 70% of the payout go to a bank account and 30% go to a Payoneer account.<br><br><span class="tablenote"><b>Note:</b> The split-payout percentage <b>must</b> always add up to 100%. If the values do not equal 100, the call will fail. Instruments cannot be added/removed using Finance and Account APIs. </span><br/>Users can specify the payout instruments being updated by using the <b>instrumentId</b> associated with each payment instrument in the request payload. This value is returned by using the <b>getPayoutSettings</b> method. Users can specify the percentage of the payout allocated to each instrument using the <b>payoutPercentage</b> request field. This value must be a whole number and cannot exceed 100.<br><br> For more details on configuring split-payout percentages, see <a href="/api-docs/split-payout/playbook.html" target="_blank ">Mainland China Split Payout Playbook.</a> */
    post: operations["updatePayoutPercentage"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description A complex type that describes the value of a monetary amount as represented by a global currency. */
    Amount: {
      /** @description The base currency applied to the <b>value</b> field to establish a monetary amount.<br/><br/>The currency is represented as a 3-letter ISO 4217 currency code. For example, the code for the Canadian Dollar is <code>CAD</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:CurrencyCodeEnum'>eBay API documentation</a> */
      currency?: string;
      /** @description The monetary amount in the specified <b>currency</b>. */
      value?: string;
    };
    /** @description This type defines the fields that can be returned in an error. */
    Error: {
      /** @description Identifies the type of erro. */
      category?: string;
      /** @description Name for the primary system where the error occurred. This is relevant for application errors. */
      domain?: string;
      /**
       * Format: int32 
       * @description A unique number to identify the error.
       */
      errorId?: number;
      /** @description An array of request elements most closely associated to the error. */
      inputRefIds?: (string)[];
      /** @description A more detailed explanation of the error. */
      longMessage?: string;
      /** @description Information on how to correct the problem, in the end user's terms and language where applicable. */
      message?: string;
      /** @description An array of request elements most closely associated to the error. */
      outputRefIds?: (string)[];
      /** @description An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned. */
      parameters?: (components["schemas"]["ErrorParameter"])[];
      /** @description Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc. */
      subdomain?: string;
    };
    ErrorParameter: {
      /** @description The object of the error. */
      name?: string;
      /** @description The value of the object. */
      value?: string;
    };
    /** @description This type is used to provide details about one or two of the seller's accounts that are enabled to receive payouts. */
    PayoutInstrument: {
      /** @description The last four digits of the account that the seller uses to receive payouts. This may be the last four digits of a bank account or a payment processor account such as Payoneer. */
      accountLastFourDigits?: string;
      /** @description The unique reference identifier for a payout instrument. The <b>instrumentId</b> is needed to change the split-payout percentages through an <b>updatePayoutPercentage</b> request. */
      instrumentId?: string;
      /** @description The status of a payout instrument. Valid payout instrument statuses include:<br/><ul><li><code>PENDING:</code> This status indicates that the account must be verified before it can be used.</li><li><code>ACTIVE:</code>This status indicates that payouts are enabled on this account.</li><li><code>VERIFICATION_FAILED:</code> This status indicates that verification has failed for this account and payouts are disabled.</li><li><code>INACTIVE:</code> This status indicates that this account has become inactive and payouts are disabled.</li></ul><br/>See <b>InstrumentStatusEnum</b> for more details on each instrument status value.<br><br><span class="tablenote"><b>Note:</b> Payment accounts can only receive payouts if the status of a payout instrument is <code>ACTIVE</code>.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/sel:InstrumentStatusEnum'>eBay API documentation</a> */
      instrumentStatus?: string;
      /** @description The type of account that received payouts. The value returned in this field may be:<br/><ul><li><code>BANK</code>: Indicates that the payout was made to a seller's bank account.</li><li><code>CARD</code> (<b>Not Currently Available</b>): Indicates that the payout went to a seller's debit card.</li><li>The name of a digital wallet provider or payment processor (e.g., <code>PAYONEER</code>)</li></ul><br><span class="tablenote"><b>Note:</b> Only Payoneer is currently supported for sellers in mainland China. Card payouts are not currently available for sellers in mainland China.</span> */
      instrumentType?: string;
      /** @description When <b>instrumentType</b> returns <code>BANK</code>, this value is the seller-provided nickname that the seller uses to represent the bank account that receives the payout.<br/><br/>When <b>instrumentType</b> returns <code>CARD</code>, this value is the debit card network for the debit card that receives the payout.<br/><br/>When <b>instrumentType</b> returns a provider of digital wallet or payment processing services, the value returned is the name of the service provider (e.g., <code>PAYONEER</code>)<br><br><span class="tablenote"><b>Note:</b> Only Payoneer is currently supported for sellers in mainland China. Card payouts are not currently available for sellers in mainland China.</span> */
      nickname?: string;
      /** @description The current payout percentage allocated to an instrument. For example, <code>50</code> indicates that 50% of the payout goes to the instrument. */
      payoutPercentage?: string;
    };
    /** @description The base response type of the <b>getPayoutSettings</b> method. */
    PayoutSettingsResponse: {
      /** @description This array provides details about the seller's accounts defined for the seller's account.<br><br> Payment accounts can only receive payouts if the status of the payout instrument is <code>ACTIVE</code>. */
      payoutInstruments?: (components["schemas"]["PayoutInstrument"])[];
    };
    /** @description This container details shipping rate information identified by a unique rate ID. A successful call returns the requested shipping rate information. */
    Rate: {
      /** @description An additional shipping cost added to the base shipping rate (i.e., <b>shippingCost</b>).<br/><br/>This amount applies only to the following <b>rateTableBasis</b> options:<ul><li><b>WEIGHT</b>: This is a cost per unit weight and is calculated using the weight of the item(s) being shipped.</li><li><b>SURCHARGE</b>: This is a flat amount that is added to the base shipping rate.</li></ul>This field is returned only when it is applicable to the specified rate ID. */
      additionalCost?: components["schemas"]["Amount"];
      /** @description The unique identifier for rate information.<br/><br/><span class="tablenote"><strong>Note:</strong> This is a string that is automatically assigned by the system when a rate object is created.</span> */
      rateId?: string;
      /** @description Indicates the level of shipping service to which the shipping rate information applies.<br/><br/>Available shipping categories are:<ul><li><b>ONE_DAY</b>: <i>This option is not supported when <b>shippingOptionType</b> is INTERNATIONAL.</i> </li><li><b>EXPEDITED</b></li><li><b>STANDARD</b></li><li><b>ECONOMY</b></li><li><b>EXPRESS</b>: <i>This option is supported only when <b>MarketplaceId</b> is <code>EBAY_DE</code> (Germany)</i></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingCategoryEnum'>eBay API documentation</a> */
      shippingCategory?: string;
      /** @description Specifies the base shipping rate for an item.<br/><br/>This amount applies only to the following <b>rateTableBasis</b> options:<ul><li><b>ITEM</b>: This is a flat rate shipping cost per item being shipped.</li><li><b>WEIGHT</b>: This is a cost per unit weight and is calculated using the weight of the item(s) being shipped.</li></ul> */
      shippingCost?: components["schemas"]["Amount"];
      /** @description An array of Region names to which the shipping rate information applies.<br/><br/>Returned values may be:<ul><li>Geographical Regions (e.g., <code>Worldwide</code>, <code>Europe</code>, and <code>Middle East</code>)</li><li>Individual countries identified by a two-letter code such as <code>US</code> (United States), <code>CA</code> (Canada), and <code>GB</code> (United Kingdom)</li><li>US states and/or Canadian provinces identified by a two-letter code such as <code>NY</code> (New York) or <code>SK</code> (Saskatchewan)</li><li>Domestic Regions such as <code>AK/HI</code> (Alaska/Hawaii)</li></ul> */
      shippingRegionNames?: (string)[];
      /** @description An enum value that indicates the shipping service used for the specified shipping rate. These enum values align with <b>ShippingService</b> metadata returned by a <b>GeteBayDetails</b> call with <b>DetailName</b> set to <code>shippingServiceDetails</code>. */
      shippingServiceCode?: string;
    };
    /** @description This container includes all information pertaining to a shipping rate table. A successful call returns the requested shipping rate information. */
    RateTableDetails: {
      /** @description Identifies the eBay marketplace to which the shipping rate table applies. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a> */
      marketplaceId?: string;
      /** @description The seller-defined name for the shipping rate table. Names must be unique for each table assigned to the same seller, shippingOptionType, and eBay marketplace.<br/><br/><b>Max length:</b> 50 */
      name?: string;
      /** @description An array of rate objects associated with the specified shipping rate table. Each rate object is identified by a unique system-generated ID and defines specific shipping rate information. */
      rates?: (components["schemas"]["Rate"])[];
      /** @description The rate calculation type provides three methods of calculating the shipping cost based on the seller's selection/input:<ul><li><b>ITEM</b>: Specifies the flat rate shipping cost that buyers in the specified shipping region will pay. When this option is selected, information specified in the rate table overrides all shipping options/costs that are specified at the listing level. Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that are not specified in the rate table will see the shipping services associated with the listing.</li><li><b>WEIGHT</b>: Seller can provide minimum shipping cost and an additional shipping cost per pound. The additional cost will be calculated based on the weight the seller provide at the time of listing. Buyers will see the total shipping cost and won’t see these calculations.  Buyers in the specified regions will only see the services provided in the rate table. Buyers in other regions that were not specified in the rate table, will see the shipping services associated with the listing.</li><li><b>SURCHARGE</b>: Lists surcharges for buyers within specified regions, or indicates a flat amount added to the shipping cost specified within an item's listing. Buyers will see only the total shipping cost as well as shipping services associated with the item's listing. If a SURCHARGE is specified in the rate table for certain regions, buyers in those regions will see the (shipping cost + SURCHARGE) total.</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingRateCalculationEnum'>eBay API documentation</a> */
      rateTableBasis?: string;
      /** @description A unique, system-generated ID assigned to the shipping rate table when it is initially created. */
      rateTableId?: string;
      /** @description The region serviced by the shipping rate table. Valid values are:<ul><li><b>DOMESTIC</b>: Indicates that the shipping rate table applies to shipping destinations within the country in which an item has been listed (i.e., the <i>source</i> country).</li><li><b>INTERNATIONAL</b>: Indicates that the shipping rate table applies to shipping destinations outside of the country in which an item has been listed.</li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:ShippingOptionTypeEnum'>eBay API documentation</a> */
      shippingOptionType?: string;
    };
    /** @description This type is used by the request payload of the <b>updateShippingCost</b> method to pass updated shipping cost information for a rate table identified by <b>rateTableId</b>. */
    RateTableUpdate: {
      /** @description An array of rate objects for which <b>shippingCost</b> and/or <b>additionalCost</b> are to be updated. */
      rates?: (components["schemas"]["RateUpdate"])[];
    };
    /** @description This container defines the updated shipping cost information for a rate object identified by <b>rateId</b>.<br/><br/>To view a list of all rate objects and corresponding <b>rateID</b> values, issue <b>getRateTable</b> for the rate table identified by <b>rateTableId</b>. */
    RateUpdate: {
      /** @description An additional shipping cost added to the base shipping rate (i.e., <b>shippingCost</b>).<br/><br/>This amount applies only to the following <b>rateTableBasis</b> options:<ul><li><b>WEIGHT</b>: This is a cost per unit weight and is calculated using the weight of the item(s) being shipped.</li><li><b>SURCHARGE</b>: This is a flat amount that is added to the base shipping rate.</li></ul>This field is returned only when it is applicable to the specified rate ID. */
      additionalCost?: components["schemas"]["Amount"];
      /** @description The identifier for the rate object.<br/><br/><span class="tablenote"><strong>Note:</strong> This is a string automatically assigned by the system when the rate object is created. It cannot be changed or updated.</span> */
      rateId?: string;
      /** @description This is the base shipping rate for an item.<br/><br/>This amount applies only to the following <b>rateTableBasis</b> options:<ul><li><b>ITEM</b>: This is a flat rate shipping cost per item being shipped.</li><li><b>WEIGHT</b>: This is a cost per unit weight and is calculated using the weight of the item(s) being shipped.</li></ul> */
      shippingCost?: components["schemas"]["Amount"];
    };
    /** @description This type allows the user to change the payout percentages for two active payment instruments. */
    UpdatePayoutPercentage: {
      /** @description The unique reference identifier for a payout instrument. This value is returned in the <a href="/api-docs/sell/account/v2/resources/payout_settings/methods/getPayoutSettings" target="_blank ">getPayoutSettings</a> response and is needed to change split-payout percentages through an <b>updatePayoutPercentage</b> request. */
      instrumentId?: string;
      /** @description The user-defined payout percentage allocated to this instrument. For example, <code>50</code> indicates that 50% of the payout goes to this instrument.<br/><br/>The split-payout percentage <b>must</b> be a positive integer value from 0-100. The values of two instruments <b>must</b> always add up to 100%. If the values do not equal 100, the call will fail. */
      payoutPercentage?: string;
    };
    /** @description This type is used by the request payload of the <b>updatePayoutPercentage</b> method to allow a seller to configure the split-payout percentages for two payout instruments. */
    UpdatePayoutPercentageRequest: {
      /** @description This array allows the seller to set the payout split percentages for two accounts enabled to receive payouts. */
      payoutInstruments?: (components["schemas"]["UpdatePayoutPercentage"])[];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** @description This method retrieves an existing rate table identified by the <b>rate_table_id</b> path parameter.<br><br>Shipping rate tables are currently supported by the following marketplaces: United States, Canada, United Kingdom, Germany, Australia, France, Italy, and Spain. A successful call returns detailed information for the specified shipping rate table. */
  getRateTable: {
    parameters: {
      path: {
        /** @description This path parameter is the unique identifier for the shipping rate table to retrieve.<br/><br/> Use the <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables" target="_blank">getRateTables</a> method of the <a href="/api-docs/sell/account/static/overview.html " target="_blank">Account API v1</a> to retrieve rate table IDs. */
        rate_table_id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["RateTableDetails"];
        };
      };
      /** @description Bad Request */
      400: never;
      /** @description Not found */
      404: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
  /** @description This method allows sellers to update <b>shippingCost</b> and/or <b>additionalCost</b> information for an existing shipping rate table identified by the <b>rate_table_id</b> path parameter.<br><br>A successful call returns an HTTP status code of <b>204 No Content</b>. */
  updateShippingCost: {
    parameters: {
      header: {
        /** @description This header indicates the format of the request body provided by the client. It's value should be set to <b>application/json</b>. <br><br> For more information, refer to <a href="/api-docs/static/rest-request-components.html#HTTP" target="_blank ">HTTP request headers</a>. */
        "Content-Type": string;
      };
      path: {
        /** @description This path parameter is the unique identifier for the shipping rate table for which shipping costs will be updated.<br/><br/> Use the <a href="/api-docs/sell/account/resources/rate_table/methods/getRateTables" target="_blank">getRateTables</a> method of the <a href="/api-docs/sell/account/static/overview.html " target="_blank">Account API v1</a> to retrieve rate table IDs. */
        rate_table_id: string;
      };
    };
    /** @description Request to update the shipping costs for the identified shipping rate table. */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["RateTableUpdate"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Bad Request */
      400: never;
      /** @description Not Found */
      404: never;
      /** @description Conflict */
      409: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
  /** @description <div class="msgbox_important"><p class="msgbox_importantInDiv" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #dd1e31;" class="mcFormatColor">Important!</span></b></span></span> Split-payout functionality is <b>only</b> available to mainland China sellers, who can split payouts between their Payoneer account and bank account. Card payouts are not currently available for sellers in mainland China.</p></div><br/>This method returns details on two payment instruments defined on a seller's account, including the ID, type, status, nickname, last four digits of the account number, and payout percentage for the instruments.<br/><br/>Using the <b>instrumentId</b> returned with this method, sellers can makes changes to the payout split of the instruments with the <b>updatePayoutPercentage</b> method. Note that the <b>instrumentStatus</b> of a payment instrument, also returned using this method, must be <code>ACTIVE</code> in order to do split payouts on that payment instrument. */
  getPayoutSettings: {
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["PayoutSettingsResponse"];
        };
      };
      /** @description Internal Server Error */
      500: never;
    };
  };
  /** @description <div class="msgbox_important"><p class="msgbox_importantInDiv" data-mc-autonum="&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #dd1e31;" class="mcFormatColor">Important!</span></b></span></span>  Split-payout functionality is <b>only</b> available to mainland China sellers, who can split payouts between their Payoneer account and bank account. Card payouts are not currently available for sellers in mainland China.</p></div><br/>This method allows sellers in mainland China to configure the split-payout percentage for two payout instruments available for seller payouts. For example, a seller can split payouts to have 70% of the payout go to a bank account and 30% go to a Payoneer account.<br><br><span class="tablenote"><b>Note:</b> The split-payout percentage <b>must</b> always add up to 100%. If the values do not equal 100, the call will fail. Instruments cannot be added/removed using Finance and Account APIs. </span><br/>Users can specify the payout instruments being updated by using the <b>instrumentId</b> associated with each payment instrument in the request payload. This value is returned by using the <b>getPayoutSettings</b> method. Users can specify the percentage of the payout allocated to each instrument using the <b>payoutPercentage</b> request field. This value must be a whole number and cannot exceed 100.<br><br> For more details on configuring split-payout percentages, see <a href="/api-docs/split-payout/playbook.html" target="_blank ">Mainland China Split Payout Playbook.</a> */
  updatePayoutPercentage: {
    parameters: {
      header: {
        /** @description This header indicates the format of the request body provided by the client. Its value should be set to <b>application/json</b>. <br><br> For more information, refer to <a href="/api-docs/static/rest-request-components.html#HTTP" target="_blank ">HTTP request headers</a>. */
        "Content-Type": string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdatePayoutPercentageRequest"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
      /** @description Bad Request */
      400: never;
      /** @description Internal Server Error */
      500: never;
    };
  };
}
